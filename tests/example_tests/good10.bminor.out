COMMENT /* tests some more constructs in bminor */
IDENTIFIER z
EQUALS =
MINUS -
IDENTIFIER x
SEMICOLON ;
COMMENT // unary negation
IDENTIFIER x
EXP ^
INTEGER_LITERAL 2
SEMICOLON ;
COMMENT //exponantiotion
COMMENT //simple test cases
IDENTIFIER x
EXP ^
INTEGER_LITERAL 2
IDENTIFIER z
NE !=
IDENTIFIER x
REMAINDER %
INTEGER_LITERAL 2
IDENTIFIER z
EQUALS =
INTEGER_LITERAL 5
PLUS +
INTEGER_LITERAL 6
SEMICOLON ;
IDENTIFIER z
EQUALS =
INTEGER_LITERAL 5
MULTIPLY *
INTEGER_LITERAL 6
SEMICOLON ;
IDENTIFIER z
EQUALS =
INTEGER_LITERAL 5
MINUS -
INTEGER_LITERAL 6
SEMICOLON ;
IDENTIFIER z
EQUALS =
INTEGER_LITERAL 5
DIVIDE /
INTEGER_LITERAL 6
SEMICOLON ;
IDENTIFIER q
INCREMENT ++
SEMICOLON ;
IDENTIFIER z
DECREMENT --
SEMICOLON ;
IDENTIFIER z
EQUALS =
INTEGER_LITERAL 7
PLUS +
INTEGER_LITERAL 7
MINUS -
IDENTIFIER z
SEMICOLON ;
