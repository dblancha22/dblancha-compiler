IDENTIFIER intFunction
COLON :
FUNCTION function
INTEGER integer
OPEN_PAREN (
IDENTIFIER intVar
COLON :
INTEGER integer
NOT ,
IDENTIFIER boolVar
COLON :
BOOLEAN boolean
CLOSE_PAREN )
OPEN_CURLY {
IF if
OPEN_PAREN (
IDENTIFIER boolVar
CLOSE_PAREN )
OPEN_CURLY {
IDENTIFIER intVar
EQUALS =
IDENTIFIER intVar
MULTIPLY *
INTEGER_LITERAL 2
SEMICOLON ;
CLOSE_CURLY }
RETURN return
IDENTIFIER intVar
SEMICOLON ;
CLOSE_CURLY }
COMMENT // finds the largest value in the array
IDENTIFIER getLargest
COLON :
FUNCTION function
INTEGER integer
OPEN_PAREN (
IDENTIFIER intArrVar
COLON :
ARRAY array
OPEN_SQUARE [
CLOSE_SQUARE ]
INTEGER integer
NOT ,
IDENTIFIER int
IDENTIFIER len
CLOSE_PAREN )
EQUALS =
OPEN_CURLY {
IDENTIFIER largest
COLON :
INTEGER integer
EQUALS =
INTEGER_LITERAL 0
SEMICOLON ;
IDENTIFIER x
COLON :
INTEGER integer
SEMICOLON ;
FOR for
OPEN_PAREN (
IDENTIFIER x
EQUALS =
INTEGER_LITERAL 0
SEMICOLON ;
IDENTIFIER x
LT <
IDENTIFIER len
SEMICOLON ;
IDENTIFIER x
INCREMENT ++
CLOSE_PAREN )
OPEN_CURLY {
IF if
OPEN_PAREN (
IDENTIFIER intArrVar
OPEN_SQUARE [
IDENTIFIER x
CLOSE_SQUARE ]
GT >
IDENTIFIER largest
CLOSE_PAREN )
OPEN_CURLY {
IDENTIFIER largest
EQUALS =
IDENTIFIER intArrVar
OPEN_SQUARE [
IDENTIFIER x
CLOSE_SQUARE ]
SEMICOLON ;
CLOSE_CURLY }
CLOSE_CURLY }
RETURN return
IDENTIFIER largest
SEMICOLON ;
CLOSE_CURLY }
IDENTIFIER main
COLON :
FUNCTION function
INTEGER integer
OPEN_PAREN (
IDENTIFIER argc
COLON :
INTEGER integer
NOT ,
IDENTIFIER argv
COLON :
ARRAY array
OPEN_SQUARE [
CLOSE_SQUARE ]
STRING string
CLOSE_PAREN )
EQUALS =
OPEN_CURLY {
IDENTIFIER b
COLON :
ARRAY array
OPEN_SQUARE [
INTEGER_LITERAL 10
CLOSE_SQUARE ]
INTEGER integer
EQUALS =
OPEN_CURLY {
INTEGER_LITERAL 0
NOT ,
INTEGER_LITERAL 1
NOT ,
INTEGER_LITERAL 2
NOT ,
INTEGER_LITERAL 3
NOT ,
INTEGER_LITERAL 4
NOT ,
INTEGER_LITERAL 5
CLOSE_CURLY }
SEMICOLON ;
IDENTIFIER b
OPEN_SQUARE [
INTEGER_LITERAL 4
CLOSE_SQUARE ]
EQUALS =
INTEGER_LITERAL 6
SEMICOLON ;
IDENTIFIER i
COLON :
INTEGER integer
SEMICOLON ;
IDENTIFIER z
COLON :
INTEGER integer
EQUALS =
IDENTIFIER intFunction
OPEN_PAREN (
IDENTIFIER i
NOT ,
TRUE true
CLOSE_PAREN )
SEMICOLON ;
PRINT print
IDENTIFIER intArrFunction
OPEN_PAREN (
IDENTIFIER v
NOT ,
IDENTIFIER z
CLOSE_PAREN )
SEMICOLON ;
CLOSE_CURLY }
