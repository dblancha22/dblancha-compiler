IDENTIFIER main
COLON :
FUNCTION function
INTEGER integer
OPEN_PAREN (
IDENTIFIER argc
COLON :
INTEGER integer
NOT ,
IDENTIFIER argv
COLON :
ARRAY array
OPEN_SQUARE [
CLOSE_SQUARE ]
STRING string
CLOSE_PAREN )
EQUALS =
OPEN_CURLY {
CLOSE_CURLY }
IDENTIFIER boolFunction
COLON :
FUNCTION function
BOOLEAN boolean
OPEN_PAREN (
IDENTIFIER intVar
COLON :
INTEGER integer
CLOSE_PAREN )
EQUALS =
OPEN_CURLY {
RETURN return
IDENTIFIER intVar
GT >
INTEGER_LITERAL 5
SEMICOLON ;
CLOSE_CURLY }
IDENTIFIER intFunction
COLON :
FUNCTION function
INTEGER integer
OPEN_PAREN (
INTEGER integer
IDENTIFIER n
CLOSE_PAREN )
EQUALS =
OPEN_CURLY {
IDENTIFIER total
COLON :
INTEGER integer
EQUALS =
INTEGER_LITERAL 0
SEMICOLON ;
IDENTIFIER int
IDENTIFIER count
SEMICOLON ;
FOR for
OPEN_PAREN (
IDENTIFIER count
EQUALS =
INTEGER_LITERAL 0
SEMICOLON ;
IDENTIFIER count
LT <
IDENTIFIER n
INTEGER_LITERAL +1
SEMICOLON ;
IDENTIFIER count
INCREMENT ++
CLOSE_PAREN )
OPEN_CURLY {
IDENTIFIER total
EQUALS =
IDENTIFIER total
PLUS +
IDENTIFIER count
SEMICOLON ;
CLOSE_CURLY }
